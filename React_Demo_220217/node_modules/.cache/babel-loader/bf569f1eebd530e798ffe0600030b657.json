{"ast":null,"code":"//Virtual DOM is JS object that helps you to update real DOM\nconst render = function (currentElement, parentElement) {\n  if (currentElement.type) {\n    console.log(currentElement.type.prototype);\n  }\n\n  const cur = document.createElement(currentElement.type);\n  Object.keys(currentElement.props).forEach(key => {\n    if (key === 'style') {\n      Object.keys(currentElement.props[key]).forEach(styleProp => {\n        cur.style[styleProp] = currentElement.props[key][styleProp];\n      });\n    } else if (key === 'id') {\n      cur.setAttribute(key, currentElement.props[key]);\n    } else if (key === 'className') {\n      //add the value to the className\n      cur.classList.add(currentElement.props[key]); // key is variable \n    } else if (key.startsWith(\"on\")) {\n      let curEvent = key.substring(2).toLowerCase(); //cur.addEventListener(key.substring(2).toLowerCase(), )\n\n      cur.addEventListener(curEvent, currentElement.props[key]);\n    } else if (key === 'children') {\n      const curchildren = currentElement.props[key];\n\n      if (Array.isArray(curchildren)) {\n        curchildren.forEach(element => {\n          render(element, cur);\n        });\n      } else if (typeof curchildren === 'string') {\n        const currentTextNode = document.createTextNode(curchildren);\n        cur.appendChild(currentTextNode);\n      } else {\n        render(curchildren, cur);\n      }\n    } else {\n      cur.setAttribute(key, currentElement.props[key]);\n    }\n  });\n  parentElement.appendChild(cur);\n};\n\nconst MyReact = {\n  render\n};\nexport default MyReact;","map":{"version":3,"sources":["/Users/jane/Desktop/LearnReact/demo/src/MyReactDOM/MyReactDOM.js"],"names":["render","currentElement","parentElement","type","console","log","prototype","cur","document","createElement","Object","keys","props","forEach","key","styleProp","style","setAttribute","classList","add","startsWith","curEvent","substring","toLowerCase","addEventListener","curchildren","Array","isArray","element","currentTextNode","createTextNode","appendChild","MyReact"],"mappings":"AAAA;AACA,MAAMA,MAAM,GAAC,UAASC,cAAT,EAAyBC,aAAzB,EAAuC;AAEhD,MAAGD,cAAc,CAACE,IAAlB,EAAuB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAc,CAACE,IAAf,CAAoBG,SAAhC;AACH;;AAED,QAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuBR,cAAc,CAACE,IAAtC,CAAZ;AAEAO,EAAAA,MAAM,CAACC,IAAP,CAAYV,cAAc,CAACW,KAA3B,EAAkCC,OAAlC,CAA0CC,GAAG,IAAE;AAC3C,QAAGA,GAAG,KAAG,OAAT,EAAiB;AACbJ,MAAAA,MAAM,CAACC,IAAP,CAAYV,cAAc,CAACW,KAAf,CAAqBE,GAArB,CAAZ,EAAuCD,OAAvC,CAA+CE,SAAS,IAAE;AACtDR,QAAAA,GAAG,CAACS,KAAJ,CAAUD,SAAV,IAAuBd,cAAc,CAACW,KAAf,CAAqBE,GAArB,EAA0BC,SAA1B,CAAvB;AACH,OAFD;AAGH,KAJD,MAKM,IAAGD,GAAG,KAAG,IAAT,EAAc;AACfP,MAAAA,GAAG,CAACU,YAAJ,CAAiBH,GAAjB,EAAsBb,cAAc,CAACW,KAAf,CAAqBE,GAArB,CAAtB;AACH,KAFI,MAGD,IAAGA,GAAG,KAAG,WAAT,EAAqB;AACtB;AACAP,MAAAA,GAAG,CAACW,SAAJ,CAAcC,GAAd,CAAkBlB,cAAc,CAACW,KAAf,CAAqBE,GAArB,CAAlB,EAFsB,CAEuB;AAChD,KAHI,MAGC,IAAIA,GAAG,CAACM,UAAJ,CAAe,IAAf,CAAJ,EAAyB;AAC3B,UAAIC,QAAQ,GAAGP,GAAG,CAACQ,SAAJ,CAAc,CAAd,EAAiBC,WAAjB,EAAf,CAD2B,CAE3B;;AACAhB,MAAAA,GAAG,CAACiB,gBAAJ,CAAqBH,QAArB,EAA+BpB,cAAc,CAACW,KAAf,CAAqBE,GAArB,CAA/B;AACH,KAJK,MAIA,IAAIA,GAAG,KAAK,UAAZ,EAAuB;AACzB,YAAMW,WAAW,GAAGxB,cAAc,CAACW,KAAf,CAAqBE,GAArB,CAApB;;AACA,UAAGY,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAH,EAA8B;AAC1BA,QAAAA,WAAW,CAACZ,OAAZ,CAAqBe,OAAD,IAAW;AAC3B5B,UAAAA,MAAM,CAAC4B,OAAD,EAAUrB,GAAV,CAAN;AACH,SAFD;AAGH,OAJD,MAIM,IAAI,OAAOkB,WAAP,KAAuB,QAA3B,EAAoC;AACtC,cAAMI,eAAe,GAAGrB,QAAQ,CAACsB,cAAT,CAAwBL,WAAxB,CAAxB;AACAlB,QAAAA,GAAG,CAACwB,WAAJ,CAAgBF,eAAhB;AACH,OAHK,MAGD;AACD7B,QAAAA,MAAM,CAACyB,WAAD,EAAclB,GAAd,CAAN;AACH;AAGJ,KAdK,MAcD;AACDA,MAAAA,GAAG,CAACU,YAAJ,CAAiBH,GAAjB,EAAsBb,cAAc,CAACW,KAAf,CAAqBE,GAArB,CAAtB;AACH;AAEJ,GAlCD;AAoCAZ,EAAAA,aAAa,CAAC6B,WAAd,CAA0BxB,GAA1B;AACH,CA7CD;;AA+CA,MAAMyB,OAAO,GAAG;AACZhC,EAAAA;AADY,CAAhB;AAIA,eAAegC,OAAf","sourcesContent":["//Virtual DOM is JS object that helps you to update real DOM\nconst render=function(currentElement, parentElement){\n\n    if(currentElement.type){\n        console.log(currentElement.type.prototype)\n    }\n   \n    const cur = document.createElement(currentElement.type)\n\n    Object.keys(currentElement.props).forEach(key=>{\n        if(key==='style'){\n            Object.keys(currentElement.props[key]).forEach(styleProp=>{\n                cur.style[styleProp] = currentElement.props[key][styleProp]\n            })\n        }\n         else if(key==='id'){\n             cur.setAttribute(key, currentElement.props[key])\n         }\n        else if(key==='className'){\n            //add the value to the className\n            cur.classList.add(currentElement.props[key]) // key is variable \n        }else if (key.startsWith(\"on\")){\n            let curEvent = key.substring(2).toLowerCase()\n            //cur.addEventListener(key.substring(2).toLowerCase(), )\n            cur.addEventListener(curEvent, currentElement.props[key]); \n        }else if (key === 'children'){\n            const curchildren = currentElement.props[key]\n            if(Array.isArray(curchildren)){\n                curchildren.forEach((element)=>{\n                    render(element, cur)\n                })\n            }else if (typeof curchildren === 'string'){\n                const currentTextNode = document.createTextNode(curchildren)\n                cur.appendChild(currentTextNode)\n            }else{\n                render(curchildren, cur)\n            }\n            \n        \n        }else{\n            cur.setAttribute(key, currentElement.props[key])\n        }\n\n    })\n\n    parentElement.appendChild(cur)\n}\n\nconst MyReact = {\n    render\n}\n\nexport default MyReact"]},"metadata":{},"sourceType":"module"}