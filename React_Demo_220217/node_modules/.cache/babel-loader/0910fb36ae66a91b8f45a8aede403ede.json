{"ast":null,"code":"import React from \"react\"; //Virtual DOM is JS object that helps you to update real DOM\n\nconst render = function (currentElement, parentElement) {\n  if (typeof currentElement === 'string') {\n    const currentTextNode = document;\n  }\n\n  if (currentElement.type.prototype instanceof React.Component) {\n    console.log(currentElement.type.prototype instanceof React.Component); // check if currentElement is the instance of React.Component\n\n    const curInstance = new currentElement.type(currentElement.props); // currentElement.type() is a class, add new at the beginning is instance // Invoking the constructor//Sending the props to currentElement\n\n    const renderElement = curInstance.render();\n    render(renderElement, parentElement); //Do recursion\n\n    return;\n  }\n\n  const cur = document.createElement(currentElement.type);\n  Object.keys(currentElement.props).forEach(key => {\n    if (key === 'style') {\n      Object.keys(currentElement.props[key]).forEach(styleProp => {\n        cur.style[styleProp] = currentElement.props[key][styleProp];\n      });\n    } else if (key === 'id') {\n      cur.setAttribute(key, currentElement.props[key]);\n    } else if (key === 'className') {\n      //add the value to the className\n      cur.classList.add(currentElement.props[key]); // key is variable \n    } else if (key.startsWith(\"on\")) {\n      let curEvent = key.substring(2).toLowerCase(); //cur.addEventListener(key.substring(2).toLowerCase(), )\n\n      cur.addEventListener(curEvent, currentElement.props[key]);\n    } else if (key === 'children') {\n      const curchildren = currentElement.props[key];\n\n      if (Array.isArray(curchildren)) {\n        curchildren.forEach(element => {\n          render(element, cur);\n        });\n      } else if (typeof curchildren === 'string') {\n        const currentTextNode = document.createTextNode(curchildren);\n        cur.appendChild(currentTextNode);\n      } else {\n        render(curchildren, cur);\n      }\n    } else {\n      cur.setAttribute(key, currentElement.props[key]);\n    }\n  });\n  parentElement.appendChild(cur);\n};\n\nconst MyReact = {\n  render\n};\nexport default MyReact;","map":{"version":3,"sources":["/Users/jane/Desktop/LearnReact/demo/src/MyReactDOM/MyReactDOM.js"],"names":["React","render","currentElement","parentElement","currentTextNode","document","type","prototype","Component","console","log","curInstance","props","renderElement","cur","createElement","Object","keys","forEach","key","styleProp","style","setAttribute","classList","add","startsWith","curEvent","substring","toLowerCase","addEventListener","curchildren","Array","isArray","element","createTextNode","appendChild","MyReact"],"mappings":"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","sourcesContent":["import React from \"react\"\n\n//Virtual DOM is JS object that helps you to update real DOM\nconst render=function(currentElement, parentElement){\n\n    if(typeof currentElement ==='string'){\n        const currentTextNode = document\n    }\n\n\n\n    if(currentElement.type.prototype instanceof React.Component){\n        console.log(currentElement.type.prototype instanceof React.Component) // check if currentElement is the instance of React.Component\n        const curInstance = new currentElement.type(currentElement.props) // currentElement.type() is a class, add new at the beginning is instance // Invoking the constructor//Sending the props to currentElement\n        const renderElement =curInstance.render()\n\n        render(renderElement, parentElement) //Do recursion\n        return\n    }\n   \n    const cur = document.createElement(currentElement.type)\n\n    Object.keys(currentElement.props).forEach(key=>{\n        if(key==='style'){\n            Object.keys(currentElement.props[key]).forEach(styleProp=>{\n                cur.style[styleProp] = currentElement.props[key][styleProp]\n            })\n        }\n         else if(key==='id'){\n             cur.setAttribute(key, currentElement.props[key])\n         }\n        else if(key==='className'){\n            //add the value to the className\n            cur.classList.add(currentElement.props[key]) // key is variable \n        }else if (key.startsWith(\"on\")){\n            let curEvent = key.substring(2).toLowerCase()\n            //cur.addEventListener(key.substring(2).toLowerCase(), )\n            cur.addEventListener(curEvent, currentElement.props[key]); \n        }else if (key === 'children'){\n            const curchildren = currentElement.props[key]\n            if(Array.isArray(curchildren)){\n                curchildren.forEach((element)=>{\n                    render(element, cur)\n                })\n            }else if (typeof curchildren === 'string'){\n                const currentTextNode = document.createTextNode(curchildren)\n                cur.appendChild(currentTextNode)\n            }else{\n                render(curchildren, cur)\n            }\n            \n        \n        }else{\n            cur.setAttribute(key, currentElement.props[key])\n        }\n\n    })\n\n    parentElement.appendChild(cur)\n}\n\nconst MyReact = {\n    render\n}\n\nexport default MyReact"]},"metadata":{},"sourceType":"module"}