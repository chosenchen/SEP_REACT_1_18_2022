{"ast":null,"code":"const render = function (currentElement, parentElement) {\n  const cur = document.createElement(currentElement.type);\n  Object.keys(currentElement.props).forEach(key => {\n    if (key === 'id') {\n      cur.setAttribute(key, currentElement.props[key]);\n    }\n\n    if (key === 'style') {\n      Object.keys(currentElement.props);\n    }\n\n    if (key === 'className') {\n      //add the value to the className\n      cur.classList.add(currentElement.props[key]); // key is variable \n    } else if (key.startsWith(\"on\")) {\n      let curEvent = key.substring(2).toLowerCase(); //cur.addEventListener(key.substring(2).toLowerCase(), )\n\n      cur.addEventListener(curEvent, currentElement.props[key]);\n    } else if (key === 'children') {\n      const curchildren = currentElement.props[key];\n\n      if (Array.isArray(curchildren)) {\n        curchildren.forEach(element => {\n          render(element, cur);\n        });\n      } else if (typeof curchildren === 'string') {\n        const currentTextNode = document.createTextNode(curchildren);\n        cur.appendChild(currentTextNode);\n      } else {\n        render(curchildren, cur);\n      }\n    } else {\n      cur.setAttribute(key, currentElement.props[key]);\n    }\n  });\n  parentElement.appendChild(cur);\n};\n\nconst MyReact = {\n  render\n};\nexport default MyReact;","map":{"version":3,"sources":["/Users/jane/Desktop/LearnReact/demo/src/MyReactDOM/MyReactDOM.js"],"names":["render","currentElement","parentElement","cur","document","createElement","type","Object","keys","props","forEach","key","setAttribute","classList","add","startsWith","curEvent","substring","toLowerCase","addEventListener","curchildren","Array","isArray","element","currentTextNode","createTextNode","appendChild","MyReact"],"mappings":"AACA,MAAMA,MAAM,GAAC,UAASC,cAAT,EAAyBC,aAAzB,EAAuC;AAEhD,QAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuBJ,cAAc,CAACK,IAAtC,CAAZ;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYP,cAAc,CAACQ,KAA3B,EAAkCC,OAAlC,CAA0CC,GAAG,IAAE;AAC1C,QAAGA,GAAG,KAAG,IAAT,EAAc;AACVR,MAAAA,GAAG,CAACS,YAAJ,CAAiBD,GAAjB,EAAsBV,cAAc,CAACQ,KAAf,CAAqBE,GAArB,CAAtB;AACH;;AACD,QAAGA,GAAG,KAAG,OAAT,EAAiB;AACbJ,MAAAA,MAAM,CAACC,IAAP,CAAYP,cAAc,CAACQ,KAA3B;AACH;;AACF,QAAGE,GAAG,KAAG,WAAT,EAAqB;AACjB;AACAR,MAAAA,GAAG,CAACU,SAAJ,CAAcC,GAAd,CAAkBb,cAAc,CAACQ,KAAf,CAAqBE,GAArB,CAAlB,EAFiB,CAE4B;AAChD,KAHD,MAGM,IAAIA,GAAG,CAACI,UAAJ,CAAe,IAAf,CAAJ,EAAyB;AAC3B,UAAIC,QAAQ,GAAGL,GAAG,CAACM,SAAJ,CAAc,CAAd,EAAiBC,WAAjB,EAAf,CAD2B,CAE3B;;AACAf,MAAAA,GAAG,CAACgB,gBAAJ,CAAqBH,QAArB,EAA+Bf,cAAc,CAACQ,KAAf,CAAqBE,GAArB,CAA/B;AACH,KAJK,MAIA,IAAIA,GAAG,KAAK,UAAZ,EAAuB;AACzB,YAAMS,WAAW,GAAGnB,cAAc,CAACQ,KAAf,CAAqBE,GAArB,CAApB;;AACA,UAAGU,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAH,EAA8B;AAC1BA,QAAAA,WAAW,CAACV,OAAZ,CAAqBa,OAAD,IAAW;AAC3BvB,UAAAA,MAAM,CAACuB,OAAD,EAAUpB,GAAV,CAAN;AACH,SAFD;AAGH,OAJD,MAIM,IAAI,OAAOiB,WAAP,KAAuB,QAA3B,EAAoC;AACtC,cAAMI,eAAe,GAAGpB,QAAQ,CAACqB,cAAT,CAAwBL,WAAxB,CAAxB;AACAjB,QAAAA,GAAG,CAACuB,WAAJ,CAAgBF,eAAhB;AACH,OAHK,MAGD;AACDxB,QAAAA,MAAM,CAACoB,WAAD,EAAcjB,GAAd,CAAN;AACH;AAGJ,KAdK,MAcD;AACDA,MAAAA,GAAG,CAACS,YAAJ,CAAiBD,GAAjB,EAAsBV,cAAc,CAACQ,KAAf,CAAqBE,GAArB,CAAtB;AACH;AAEJ,GAhCD;AAkCAT,EAAAA,aAAa,CAACwB,WAAd,CAA0BvB,GAA1B;AACH,CAvCD;;AAyCA,MAAMwB,OAAO,GAAG;AACZ3B,EAAAA;AADY,CAAhB;AAIA,eAAe2B,OAAf","sourcesContent":["\nconst render=function(currentElement, parentElement){\n   \n    const cur = document.createElement(currentElement.type)\n\n    Object.keys(currentElement.props).forEach(key=>{\n         if(key==='id'){\n             cur.setAttribute(key, currentElement.props[key])\n         }\n         if(key==='style'){\n             Object.keys(currentElement.props)\n         }\n        if(key==='className'){\n            //add the value to the className\n            cur.classList.add(currentElement.props[key]) // key is variable \n        }else if (key.startsWith(\"on\")){\n            let curEvent = key.substring(2).toLowerCase()\n            //cur.addEventListener(key.substring(2).toLowerCase(), )\n            cur.addEventListener(curEvent, currentElement.props[key]); \n        }else if (key === 'children'){\n            const curchildren = currentElement.props[key]\n            if(Array.isArray(curchildren)){\n                curchildren.forEach((element)=>{\n                    render(element, cur)\n                })\n            }else if (typeof curchildren === 'string'){\n                const currentTextNode = document.createTextNode(curchildren)\n                cur.appendChild(currentTextNode)\n            }else{\n                render(curchildren, cur)\n            }\n            \n        \n        }else{\n            cur.setAttribute(key, currentElement.props[key])\n        }\n\n    })\n\n    parentElement.appendChild(cur)\n}\n\nconst MyReact = {\n    render\n}\n\nexport default MyReact"]},"metadata":{},"sourceType":"module"}