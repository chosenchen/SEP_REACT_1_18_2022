{"ast":null,"code":"const update = function (currentElement, parentElement, isRoot) {\n  if (typeof currentElement === 'string' || typeof currentElement === 'number') {\n    const currentTextNode = document.createTextNode(currentElement);\n    parentElement.appendChild(currentTextNode);\n    return;\n  }\n\n  if (currentElement.type.prototype instanceof MyReact.Component) {\n    console.log(currentElement.type.prototype instanceof MyReact.Component); // check if currentElement is the instance of React.Component\n\n    const curInstance = new currentElement.type(currentElement.props); // currentElement.type() is a class, add new at the beginning is instance // Invoking the constructor//Sending the props to currentElement\n\n    curInstance.parentDomElement = parentElement;\n    const renderElement = curInstance.render();\n    render(renderElement, parentElement); //Do recursion\n\n    return;\n  }\n\n  const cur = document.createElement(currentElement.type);\n  Object.keys(currentElement.props).forEach(key => {\n    if (key === 'style') {\n      Object.keys(currentElement.props[key]).forEach(styleProp => {\n        cur.style[styleProp] = currentElement.props[key][styleProp];\n      });\n    } else if (key === 'id') {\n      cur.setAttribute(key, currentElement.props[key]);\n    } else if (key === 'className') {\n      //add the value to the className\n      cur.classList.add(currentElement.props[key]); // key is variable \n    } else if (key.startsWith(\"on\")) {\n      let curEvent = key.substring(2).toLowerCase(); //cur.addEventListener(key.substring(2).toLowerCase(), )\n\n      cur.addEventListener(curEvent, currentElement.props[key]);\n    } else if (key === 'children') {\n      const curchildren = currentElement.props[key];\n\n      if (Array.isArray(curchildren)) {\n        curchildren.forEach(element => {\n          update(element, cur);\n        });\n      } else if (typeof curchildren === 'string') {\n        const currentTextNode = document.createTextNode(curchildren);\n        cur.appendChild(currentTextNode);\n      } else {\n        update(curchildren, cur);\n      }\n    } else {\n      cur.setAttribute(key, currentElement.props[key]);\n    }\n  });\n\n  if (isRoot) {\n    parentElement.lastChild.replaceWith(cur);\n  } else {\n    parentElement.appendChild(cur);\n  }\n};\n\nclass Component {\n  constructor(props) {\n    this.setState = newStateOrCB => {\n      // object or callback function\n      setTimeout(() => {\n        if (typeof newStateOrCB === 'function') {\n          const newState = newStateOrCB(this.state);\n          this.state = { ...this.state,\n            ...newState\n          };\n        }\n      });\n      console.log('state', this.state); // this refers to instance of this class but not in prototype function just normal function\n\n      this.state = { ...this.state,\n        ...newState\n      }; // it will be instance method, not prototype method\n\n      update(this.render(), this.parentDOMele, true);\n    };\n\n    this.props = props;\n  }\n\n}\n\nconst MyReact = {\n  Component\n};\nlet obj = {\n  a: 1,\n  b: 2\n}; //Immutable way\n// obj ={\n//     ...obj,\n//     a: 2\n// }\n//Mutable way \n\nobj.a = 2;\nconsole.log(obj);\nexport default MyReact;","map":{"version":3,"sources":["/Users/jane/Desktop/LearnReact/cra_mounting/src/MyReact/MyReact.js"],"names":["update","currentElement","parentElement","isRoot","currentTextNode","document","createTextNode","appendChild","type","prototype","MyReact","Component","console","log","curInstance","props","parentDomElement","renderElement","render","cur","createElement","Object","keys","forEach","key","styleProp","style","setAttribute","classList","add","startsWith","curEvent","substring","toLowerCase","addEventListener","curchildren","Array","isArray","element","lastChild","replaceWith","constructor","setState","newStateOrCB","setTimeout","newState","state","parentDOMele","obj","a","b"],"mappings":"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","sourcesContent":["\nconst update=function(currentElement, parentElement, isRoot){\n\n    if(typeof currentElement ==='string' || typeof currentElement ==='number'){\n        const currentTextNode = document.createTextNode(currentElement)\n        parentElement.appendChild(currentTextNode)\n        return\n    }\n\n    if(currentElement.type.prototype instanceof MyReact.Component){\n        console.log(currentElement.type.prototype instanceof MyReact.Component) // check if currentElement is the instance of React.Component\n        const curInstance = new currentElement.type(currentElement.props) // currentElement.type() is a class, add new at the beginning is instance // Invoking the constructor//Sending the props to currentElement\n        curInstance.parentDomElement = parentElement\n        const renderElement =curInstance.render()\n        render(renderElement, parentElement) //Do recursion\n        return\n    }\n   \n    const cur = document.createElement(currentElement.type)\n\n    Object.keys(currentElement.props).forEach(key=>{\n        if(key==='style'){\n            Object.keys(currentElement.props[key]).forEach(styleProp=>{\n                cur.style[styleProp] = currentElement.props[key][styleProp]\n            })\n        }\n         else if(key==='id'){\n             cur.setAttribute(key, currentElement.props[key])\n         }\n        else if(key==='className'){\n            //add the value to the className\n            cur.classList.add(currentElement.props[key]) // key is variable \n        }else if (key.startsWith(\"on\")){\n            let curEvent = key.substring(2).toLowerCase()\n            //cur.addEventListener(key.substring(2).toLowerCase(), )\n            cur.addEventListener(curEvent, currentElement.props[key]); \n        }else if (key === 'children'){\n            const curchildren = currentElement.props[key]\n            if(Array.isArray(curchildren)){\n                curchildren.forEach((element)=>{\n                    update(element, cur)\n                })\n            }else if (typeof curchildren === 'string'){\n                const currentTextNode = document.createTextNode(curchildren)\n                cur.appendChild(currentTextNode)\n            }else{\n                update(curchildren, cur)\n            }\n            \n        \n        }else{\n            cur.setAttribute(key, currentElement.props[key])\n        }\n\n    })\n    if(isRoot){\n        parentElement.lastChild.replaceWith(cur)\n    }else{\n        parentElement.appendChild(cur)\n    }\n}\n\n\n\nclass Component {\n    constructor(props){\n        this.props = props\n    }\n\n    setState=(newStateOrCB)=>{ // object or callback function\n        setTimeout(()=>{\n            if(typeof newStateOrCB === 'function'){\n                const newState = newStateOrCB(this.state)\n                this.state = {...this.state, ...newState}\n                \n            }\n        })\n        \n        console.log('state', this.state)// this refers to instance of this class but not in prototype function just normal function\n        this.state ={...this.state, ...newState} // it will be instance method, not prototype method\n        update(this.render(), this.parentDOMele, true)\n    }\n}\n\n\nconst MyReact ={\n    Component, \n}\n\nlet obj = {\n    a: 1,\n    b: 2\n}\n\n//Immutable way\n// obj ={\n//     ...obj,\n//     a: 2\n// }\n\n//Mutable way \nobj.a=2\n\n\nconsole.log(obj)\n\nexport default MyReact"]},"metadata":{},"sourceType":"module"}